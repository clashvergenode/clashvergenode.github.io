<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashvergenode.github.io/news/article-58459.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现</title>
        <meta name="description" content="目录  Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现   背景 Golang实现 总结      背景 后端向web页面请求参数时，通常会有两" />
        <link rel="icon" href="/assets/website/img/clashvergenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashVergeNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashvergenode.github.io/news/article-58459.htm" />
    <meta property="og:site_name" content="ClashVergeNode节点订阅站" />
    <meta property="og:title" content="Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现" />
    <meta property="og:image" content="https://clashvergenode.github.io/uploads/20240519/eb87571571fd19ede85aa5cd788689a0.webp" />
        <meta property="og:release_date" content="2025-02-18T00:36:32" />
    <meta property="og:updated_time" content="2025-02-18T00:36:32" />
        <meta property="og:description" content="目录  Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现   背景 Golang实现 总结      背景 后端向web页面请求参数时，通常会有两" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Place favicon.ico in the root directory -->
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/bootstrap-5.0.0-beta2.min.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/main.css" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TQG4M5VMSY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-TQG4M5VMSY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lte IE 9]>
      <p class="browserupgrade">
        You are using an <strong>outdated</strong> browser. Please
        <a href="https://browsehappy.com/">upgrade your browser</a> to improve
        your experience and security.
      </p>
    <![endif]-->
<!-- ========================= preloader start ========================= -->
<div class="preloader">
    <div class="loader">
        <div class="spinner">
            <div class="spinner-container">
                <div class="spinner-rotator">
                    <div class="spinner-left">
                        <div class="spinner-circle"></div>
                    </div>
                    <div class="spinner-right">
                        <div class="spinner-circle"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- preloader end -->
<!-- ========================= header start ========================= -->
<header class="header">
    <div class="navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <nav class="navbar navbar-expand-lg">
                        <a class="navbar-brand" href="/">
                                                    <span>Clash Verge Node</span>
                                                </a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                            <ul id="nav" class="navbar-nav ms-auto">
                                                                <li class="nav-item">
                                    <a href="/">首页</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/free-nodes/">免费节点</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/paid-subscribe/">推荐机场</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/client.htm">客户端</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/news/">新闻资讯</a>
                                </li>
                                                            </ul>
                        </div>
                        <!-- navbar collapse -->
                    </nav>
                    <!-- navbar -->
                </div>
            </div>
            <!-- row -->
        </div>
        <!-- container -->
    </div>
    <!-- navbar area -->
</header>
<!-- ========================= header end ========================= -->
    <!-- ========================= hero-section start ========================= -->
    <section id="category" class="hero-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <div class="hero-content">
                        <h1 class="wow fadeInUp" data-wow-delay=".4s">
                            Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现                        </h1>
                        <p class="wow fadeInUp" data-wow-delay=".6s">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="hero-img wow fadeInUp" data-wow-delay=".5s">
                        <img src="/assets/website/img/clashvergenode/hero/hero-img.svg" alt="">
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- ========================= hero-section end ========================= -->
    <!-- ========================= about-section start ========================= -->
    <section id="about" class="about-section pt-100">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> </h1> <div class="toc"> <h3>目录</h3> <ul> <li><a href="#GolangQuery_ParamsPath_Variables_0" rel="nofollow">Golang学习之网络参数请求-Query Params及Path Variables的区别及底层实现</a></li> <li> <ul> <li><a href="#_2" rel="nofollow">背景</a></li> <li><a href="#Golang_30" rel="nofollow">Golang实现</a></li> <li><a href="#_99" rel="nofollow">总结</a></li> </ul> </li> </ul> </div> <h2> <a id="_2" rel="nofollow"></a>背景</h2> <p>后端向web页面请求参数时，通常会有两种方式，1、<code>Query Params</code>；2、<code>Path Variables</code>，他们的区别在哪里呢？</p> <p>一、<code>Query Params</code></p> <p>顾名思义，请求参数。由前端通过k-v键值对的形式传入，其值并不是通过url本身获取，例如</p> <p><code>http://localhost:8080/Local/user?userName="nick"&amp;age=12</code></p> <p>上述链接可以分两段来理解，<code>？</code>前为路径，<code>？</code>后为路径传入的参数</p> <p>路径：<code>http://localhost:8080/Local/user</code></p> <p>参数：<code>userName="nick"</code>,<code>age=12</code></p> <p>二、<code>Path Variables</code></p> <p>路径参数。直接在<code>url</code>中获取的参数，例如</p> <p><code>http://localhost:8080/Local/user/nick</code></p> <p>上述链接就是一条路径，变量<code>nick</code>通过路径获取</p> <p>后端接口会表示为</p> <p><code>http://localhost:8080/Local/user/:userName</code></p> <h2> <a id="Golang_30" rel="nofollow"></a>Golang实现</h2> <p>在gin框架中，通过<code>context.go</code>封装了获取上述两种参数的方法，需通过<code>Context</code>结构体调用。</p> <p><strong>什么是<code>Context</code></strong></p> <p>官方的说法是，<code>Context</code>是gin框架中最重要的部分，它使得我们可以在中间件中传递参数、管理数据流，验证JSON请求，渲染JSON返回流。其中封装了非常多的功能，详细阅读请查看源码或文档。</p> <pre><code>// Context is the most important part of gin. It allows us to pass variables between middleware, // manage the flow, validate the JSON of a request and render a JSON response for example. </code></pre> <p>1、获取<code>Query Params</code></p> <p>提供了方法<code>Query</code>，gin中部分源码如下</p> <pre><code class="prism language-go"><span class="token comment">// Query returns the keyed url query value if it exists,</span> <span class="token comment">// otherwise it returns an empty string `("")`.</span> <span class="token comment">// It is shortcut for `c.Request.URL.Query().Get(key)`</span> <span class="token comment">//     GET /path?id=1234&amp;name=Manu&amp;value=</span> <span class="token comment">// 	   c.Query("id") == "1234"</span> <span class="token comment">// 	   c.Query("name") == "Manu"</span> <span class="token comment">// 	   c.Query("value") == ""</span> <span class="token comment">// 	   c.Query("wtf") == ""</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">Query</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{<!-- --></span> 	value<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">GetQuery</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> 	<span class="token keyword">return</span> value <span class="token punctuation">}</span> <span class="token comment">//查看GetQury方法实现，底层通过map去接收参数，获取第一个参数值并返回</span> <span class="token comment">// 	   It is shortcut for `c.Request.URL.Query().Get(key)`</span> <span class="token comment">//     GET /?name=Manu&amp;lastname=</span> <span class="token comment">//     ("Manu", true) == c.GetQuery("name")</span> <span class="token comment">//     ("", false) == c.GetQuery("id")</span> <span class="token comment">//     ("", true) == c.GetQuery("lastname")</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">GetQuery</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> values<span class="token punctuation">,</span> ok <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">GetQueryArray</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ok 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>  </code></pre> <p>1、获取<code>Path Variables</code></p> <p>提供了方法<code>Param</code></p> <pre><code class="prism language-go"><span class="token comment">// Param returns the value of the URL param.</span> <span class="token comment">// It is a shortcut for c.Params.ByName(key)</span> <span class="token comment">//     router.GET("/user/:id", func(c *gin.Context) {<!-- --></span> <span class="token comment">//         // a GET request to /user/john</span> <span class="token comment">//         id := c.Param("id") // id == "john"</span> <span class="token comment">//     })</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Context<span class="token punctuation">)</span> <span class="token function">Param</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">return</span> c<span class="token punctuation">.</span>Params<span class="token punctuation">.</span><span class="token function">ByName</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token comment">//继续查看调用方法，使用Params结构体封装</span> <span class="token comment">// ByName returns the value of the first Param which key matches the given name.</span> <span class="token comment">// If no matching Param is found, an empty string is returned.</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>ps Params<span class="token punctuation">)</span> <span class="token function">ByName</span><span class="token punctuation">(</span>name <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>va <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	va<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> ps<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> 	<span class="token keyword">return</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="_99" rel="nofollow"></a>总结</h2> <p>1、从微观角度看，两者区别在于<code>Path Variables</code>通过slice获取，而<code>Query Params</code>通过map获取，关键点为是否构成k-v结构，所以当所请求参数为空值的时候，作为切片的<code>Path Variables</code>是无法成功获取参数的，而map可以通过例如<code>"name"=""</code>来接收参数，然后后台可以根据这个<code>""</code>继续处理后续接口。</p> <p>2、从宏观角度看，两者在参数获取形式上有区别。<code>Path Variables</code>通过url获取，<code>Query Params</code>通过请求参数获取。</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-58096.htm">宠物犬免费领养（宠物狗免费领养）</a></p>
                                        <p>下一个：<a href="/news/article-58460.htm">宠物粮食市场前景分析论文题目怎么写（宠物粮调研）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-26-free-v2ray.htm" title="1月26日|最高速度23M/S，2025最新ClashVerge免费节点高速订阅链接">1月26日|最高速度23M/S，2025最新ClashVerge免费节点高速订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-3-free-node-subscribe-links.htm" title="2月3日|最高速度21.2M/S，2025最新ClashVerge免费节点高速订阅链接">2月3日|最高速度21.2M/S，2025最新ClashVerge免费节点高速订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-38548.htm" title="宠物医院好评评语100字 宠物医院好评评语100字怎么写">宠物医院好评评语100字 宠物医院好评评语100字怎么写</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-free-clash.htm" title="1月5日|最高速度20.6M/S，2025最新ClashVerge免费节点高速订阅链接">1月5日|最高速度20.6M/S，2025最新ClashVerge免费节点高速订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-10-free-high-speed-nodes.htm" title="1月10日|最高速度22.1M/S，2025最新ClashVerge免费节点高速订阅链接">1月10日|最高速度22.1M/S，2025最新ClashVerge免费节点高速订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-39532.htm" title="动物疫苗产业链分析 动物疫苗产业链分析报告">动物疫苗产业链分析 动物疫苗产业链分析报告</a></li>
                        <li class="py-2"><a href="/news/article-44495.htm" title="springboot调整请求头大小_解决Springboot get请求是参数过长的情况">springboot调整请求头大小_解决Springboot get请求是参数过长的情况</a></li>
                        <li class="py-2"><a href="/news/article-38036.htm" title="猫不打疫苗为什么不能绝育（为什么猫不打疫苗不能洗澡）">猫不打疫苗为什么不能绝育（为什么猫不打疫苗不能洗澡）</a></li>
                        <li class="py-2"><a href="/news/article-24533.htm" title="开宠物食品加工厂需要什么手续（开个宠物食品厂要投资多少钱）">开宠物食品加工厂需要什么手续（开个宠物食品厂要投资多少钱）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-16-free-node-subscribe.htm" title="12月16日|最高速度22.1M/S，2024最新ClashVerge免费节点高速订阅链接">12月16日|最高速度22.1M/S，2024最新ClashVerge免费节点高速订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </section>
    <!-- ========================= about-section end ========================= -->
        <!-- ========================= footer start ========================= -->
    <footer class="footer">
        <div class="container">
            <div class="copy-right">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p>
                    ClashVergeNode节点订阅站 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- ========================= footer end ========================= -->
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/clashvergenode/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/bootstrap-5.0.0-beta2.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/polifill.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>