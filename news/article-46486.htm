<!DOCTYPE html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashvergenode.github.io/news/article-46486.htm" />
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <title>FreeRTOS实时操作系统之可视化追踪调试_操作系统</title>
        <meta name="description" content="目录  前言 1.使能可视化追踪和运行时间统计功能 2.获取任务信息并格式化 3.添加到命令解释列表    前言 用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分" />
        <link rel="icon" href="/assets/website/img/clashvergenode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashVergeNode节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashvergenode.github.io/news/article-46486.htm" />
    <meta property="og:site_name" content="ClashVergeNode节点订阅站" />
    <meta property="og:title" content="FreeRTOS实时操作系统之可视化追踪调试_操作系统" />
    <meta property="og:image" content="https://clashvergenode.github.io/uploads/20240519/b9f364b6a80018a8acbdf000e1d74c99.webp" />
        <meta property="og:release_date" content="2025-01-26T09:59:31" />
    <meta property="og:updated_time" content="2025-01-26T09:59:31" />
        <meta property="og:description" content="目录  前言 1.使能可视化追踪和运行时间统计功能 2.获取任务信息并格式化 3.添加到命令解释列表    前言 用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <!-- Place favicon.ico in the root directory -->
    <!-- ========================= CSS here ========================= -->
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/bootstrap-5.0.0-beta2.min.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/LineIcons.2.0.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/tiny-slider.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/animate.css" />
    <link rel="stylesheet" href="/assets/website/css/clashvergenode/main.css" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="FreeRTOS实时操作系统之可视化追踪调试_操作系统">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-TQG4M5VMSY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-TQG4M5VMSY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--[if lte IE 9]>
      <p class="browserupgrade">
        You are using an <strong>outdated</strong> browser. Please
        <a href="https://browsehappy.com/">upgrade your browser</a> to improve
        your experience and security.
      </p>
    <![endif]-->
<!-- ========================= preloader start ========================= -->
<div class="preloader">
    <div class="loader">
        <div class="spinner">
            <div class="spinner-container">
                <div class="spinner-rotator">
                    <div class="spinner-left">
                        <div class="spinner-circle"></div>
                    </div>
                    <div class="spinner-right">
                        <div class="spinner-circle"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- preloader end -->
<!-- ========================= header start ========================= -->
<header class="header">
    <div class="navbar-area">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-12">
                    <nav class="navbar navbar-expand-lg">
                        <a class="navbar-brand" href="/">
                                                    <span>Clash Verge Node</span>
                                                </a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                            <ul id="nav" class="navbar-nav ms-auto">
                                                                <li class="nav-item">
                                    <a href="/">首页</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/free-nodes/">免费节点</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/paid-subscribe/">推荐机场</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/client.htm">客户端</a>
                                </li>
                                                                <li class="nav-item">
                                    <a href="/news/">新闻资讯</a>
                                </li>
                                                            </ul>
                        </div>
                        <!-- navbar collapse -->
                    </nav>
                    <!-- navbar -->
                </div>
            </div>
            <!-- row -->
        </div>
        <!-- container -->
    </div>
    <!-- navbar area -->
</header>
<!-- ========================= header end ========================= -->
    <!-- ========================= hero-section start ========================= -->
    <section id="category" class="hero-section">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <div class="hero-content">
                        <h1 class="wow fadeInUp" data-wow-delay=".4s">
                            FreeRTOS实时操作系统之可视化追踪调试_操作系统                        </h1>
                        <p class="wow fadeInUp" data-wow-delay=".6s">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="hero-img wow fadeInUp" data-wow-delay=".5s">
                        <img src="/assets/website/img/clashvergenode/hero/hero-img.svg" alt="">
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- ========================= hero-section end ========================= -->
    <!-- ========================= about-section start ========================= -->
    <section id="about" class="about-section pt-100">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="navCategory"> <h5 class="catalogue">目录</h5> <ul class="first_class_ul"> <li><a href="#_label0" rel="nofollow">前言</a></li> <li><a href="#_label1" rel="nofollow">1.使能可视化追踪和运行时间统计功能</a></li> <li><a href="#_label2" rel="nofollow">2.获取任务信息并格式化</a></li> <li><a href="#_label3" rel="nofollow">3.添加到命令解释列表</a></li> </ul> </div> <p class="maodian"><a name="_label0" rel="nofollow"></a></p> <h2>前言</h2> <p>用RTOS编程，为每个任务分配多大的堆栈空间就成了一项技术活：分配多了浪费系统资源，分配少了又恐怕会发生堆栈溢出。由于中断和抢占式调度器的存在，我们要估算出一个任务需要多少堆栈是非常困难的，今天我们就介绍一种方法，来获取每个任务的剩余堆栈空间。本文以NXP LPC177x_8x系列微控制器为例。</p> <p>我们将这个功能做成一个命令，添加到<a href="//www.jb51.net/article/243694.htm" target="_blank" rel="nofollow">FreeRTOS使用任务通知实现命令行解释器</a>一文介绍的命令解释列表中。当程序运行一段时间后，我们在SecureCRT软件中输入命令“task”后回车，能看到如图1-1所示的任务信息。这里只有两个任务，其中堆栈一列中的数字，代表对应任务剩余的堆栈空间，单位是StackType_t类型，这个类型在移植层定义，一般定义为4字节。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220424/6e06c0f0a7fd07396eeb3c2d88cb6830.jpg"></p> <p>图1-1：任务信息</p> <p class="maodian"><a name="_label1" rel="nofollow"></a></p> <h2>1.使能可视化追踪和运行时间统计功能</h2> <p>如图1-1所示，要实现堆栈使用量信息以及CPU使用率信息，必须将FreeRTOSConfig.h文件中的两个宏设置为1：</p> <div class="ay1code"> <pre class="brush:cpp;">         #define configUSE_TRACE_FACILITY          1                 #define configGENERATE_RUN_TIME_STATS 1</pre> </div> <p>第一个宏用来使能可视化追踪功能，第二个宏用来使能运行时间统计功能。如果第二个宏设置为1，则下面两个宏必须被定义：</p> <blockquote> <p>portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()：</p> </blockquote> <p>用户程序需要提供一个基准时钟函数，函数完成初始化基准时钟功能，这个函数要被define到宏portCONFIGURE_TIMER_FOR_RUN_TIME_STATS()上。</p> <p>这是因为运行时间统计需要一个比系统节拍中断频率还要高分辨率的基准定时器，否则，统计可能不精确。</p> <p>基准定时器中断频率要比统节拍中断快10~100倍。基准定时器中断频率越快，统计越精准，但能统计的运行时间也越短（比如，基准定时器10ms中断一次，8位无符号整形变量可以计到2.55秒，但如果是1秒中断一次，8位无符号整形变量可以统计到255秒）。</p> <blockquote> <p>portGET_RUN_TIME_COUNTER_VALUE()：</p> </blockquote> <p>用户程序需要提供一个返回基准时钟当前“时间”的函数，这个函数要被define到宏portGET_RUN_TIME_COUNTER_VALUE()上。</p> <p>我们使用定时器1来产生基准时钟，定时器1初始化函数为：</p> <div class="ay1code"> <pre class="brush:cpp;">/**  * 初始化计时定时器1,用于OS任务运行时间统计  */  void init_timer1_for_runtime_state(void)  {      TIM_TIMERCFG_Type Timer0CfgType;      Timer0CfgType.PrescaleOption=TIM_PRESCALE_USVAL;        //预分频的单位是微秒      Timer0CfgType.PrescaleValue=500;                        //预分频后为500微秒,      TIM_Init(LPC_TIM1,TIM_TIMER_MODE,&amp;Timer0CfgType);      LPC_TIM1-&gt;TCR=0x01;  }</pre> </div> <p>定时器1被配置成每隔500微秒，TC寄存器值增一。我们将定时器1的 TC寄存器值作为基准时钟当前时间。当TC寄存器值溢出时，大概要经过24.8天，这对于我们这个应用是足够的。</p> <p>在FreeRTOSConfig.h中，定义初始化基准定时器宏和获取当前时间宏：</p> <div class="ay1code"> <pre class="brush:cpp;">extern void init_timer1_for_runtime_state(void);  #define TIMER1_TC         ( * ( ( volatile uint32_t * )0x40008008 ) )  #define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() init_timer1_for_runtime_state()  #define portGET_RUN_TIME_COUNTER_VALUE() TIMER1_TC</pre> </div> <p class="maodian"><a name="_label2" rel="nofollow"></a></p> <h2>2.获取任务信息并格式化</h2> <p>获取每个任务的状态信息使用的是API函数uxTaskGetSystemState()，该函数定义为：</p> <div class="ay1code"> <pre class="brush:cpp;">UBaseType_tuxTaskGetSystemState(                         TaskStatus_t * constpxTaskStatusArray,                         const UBaseType_tuxArraySize,                         unsigned long * constpulTotalRunTime );</pre> </div> <p>函数uxTaskGetSystemState()向TaskStatus_t结构体填充相关信息，系统中每一个任务的信息都可以填充到TaskStatus_t结构体数组中，数组大小由uxArraySize指定。结构体TaskStatus_t定义如下：</p> <div class="ay1code"> <pre class="brush:cpp;">typedef struct xTASK_STATUS  {     /* 任务句柄*/     TaskHandle_t xHandle;     /* 指针，指向任务名*/     const signed char *pcTaskName;     /*任务ID，是一个独一无二的数字*/     UBaseType_t xTaskNumber;     /*填充结构体时，任务当前的状态（运行、就绪、挂起等等）*/     eTaskState eCurrentState;     /*填充结构体时，任务运行（或继承）的优先级。*/     UBaseType_t uxCurrentPriority;     /* 当任务因继承而改变优先级时，该变量保存任务最初的优先级。仅当configUSE_MUTEXES定义为1有效。*/     UBaseType_t uxBasePriority;     /* 分配给任务的总运行时间。仅当宏configGENERATE_RUN_TIME_STATS为1时有效。*/     unsigned long ulRunTimeCounter;     /* 从任务创建起，堆栈剩余的最小数量，这个值越接近0，堆栈溢出的可能越大。 */     unsigned short usStackHighWaterMark;  }TaskStatus_t;</pre> </div> <p>注意，这个函数仅用来调试用，调用此函数会挂起所有任务，直到函数结束后才恢复挂起的任务，因此任务可能被挂起很长时间。在文件FreeRTOSConfig.h中，宏configUSE_TRACE_FACILITY必须设置为1，此函数才有效。</p> <p>由于我们不使用动态内存分配策略，所以实现定义了最大任务个数并预先分配好了存储任务状态信息的数组：</p> <div class="ay1code"> <pre class="brush:cpp;">#defineMAX_TASK_NUM        5  TaskStatus_tpxTaskStatusArray[MAX_TASK_NUM];</pre> </div> <p>正确调用函数uxTaskGetSystemState()后，任务的信息会被放在TaskStatus_t结构体中，我们需要将这些信息格式化为容易阅读的形式，并共通过串口打印到屏幕。完成这些功能的函数叫做get_task_state()，代码如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">/*获取OS任务信息*/  voidget_task_state(int32_t argc,void *cmd_arg)  {      const chartask_state[]={'r','R','B','S','D'};      volatile UBaseType_t uxArraySize, x;      uint32_t ulTotalRunTime,ulStatsAsPercentage;      /* 获取任务总数目 */      uxArraySize = uxTaskGetNumberOfTasks();     if(uxArraySize&gt;MAX_TASK_NUM)      {          MY_DEBUGF(CMD_LINE_DEBUG,("当前任务数量过多！\n"));      }      /*获取每个任务的状态信息 */      uxArraySize = uxTaskGetSystemState(pxTaskStatusArray, uxArraySize, &amp;ulTotalRunTime );      #if (configGENERATE_RUN_TIME_STATS==1)      MY_DEBUGF(CMD_LINE_DEBUG,("任务名      状态  ID    优先级  堆栈    CPU使用率\n"));         /* 避免除零错误 */      if( ulTotalRunTime &gt; 0 )      {          /* 将获得的每一个任务状态信息部分的转化为程序员容易识别的字符串格式 */          for( x = 0; x &lt; uxArraySize; x++ )          {              char tmp[128];              /* 计算任务运行时间与总运行时间的百分比。*/              ulStatsAsPercentage =(uint64_t)(pxTaskStatusArray[ x ].ulRunTimeCounter)*100 / ulTotalRunTime;              if( ulStatsAsPercentage &gt; 0UL )              {                 sprintf(tmp,"%-12s%-6c%-6d%-8d%-8d%d%%",pxTaskStatusArray[ x].pcTaskName,task_state[pxTaskStatusArray[ x ].eCurrentState],                                                                         pxTaskStatusArray[ x ].xTaskNumber,pxTaskStatusArray[ x].uxCurrentPriority,                                                                         pxTaskStatusArray[ x ].usStackHighWaterMark,ulStatsAsPercentage);              }              else              {                  /* 任务运行时间不足总运行时间的1%*/                  sprintf(tmp,"%-12s%-6c%-6d%-8d%-8dt&lt;1%%",pxTaskStatusArray[x ].pcTaskName,task_state[pxTaskStatusArray[ x ].eCurrentState],                                                                         pxTaskStatusArray[ x ].xTaskNumber,pxTaskStatusArray[ x].uxCurrentPriority,                                                                         pxTaskStatusArray[ x ].usStackHighWaterMark);                             }             MY_DEBUGF(CMD_LINE_DEBUG,("%s\n",tmp));          }      }      MY_DEBUGF(CMD_LINE_DEBUG,("任务状态:   r-运行  R-就绪  B-阻塞  S-挂起  D-删除\n"));      #endif //#if (configGENERATE_RUN_TIME_STATS==1)  }</pre> </div> <p class="maodian"><a name="_label3" rel="nofollow"></a></p> <h2>3.添加到命令解释列表</h2> <p>在<a href="//www.jb51.net/article/243694.htm" target="_blank" rel="nofollow">FreeRTOS使用任务通知实现命令行解释器</a>一文我们讲过了命令表，这里只需要将get_task_state()函数添加到命令列表中，命令设置为”task”，代码如下所示：</p> <div class="ay1code"> <pre class="brush:cpp;">/*命令表*/  const cmd_list_structcmd_list[]={  /*   命令    参数数目    处理函数        帮助信息                                  */         {"?",       0,     handle_help,     "?                                  -打印帮助信息"},                       {"reset",   0,     handle_reset,    "reset                              -重启控制器"},      {"arg",     8,     handle_arg,      "arg&lt;arg1&gt; &lt;arg2&gt; ...               -测试用,打印输入的参数"},      {"hello",   0,     printf_hello,    "hello                              -打印HelloWorld!"},      {"task",    0,     get_task_state,  "task                               -获取任务信息"},  };</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-46485.htm">HashMap中红黑树插入节点的调整过程分析_在线工具</a></p>
                                        <p>下一个：<a href="/news/article-46966.htm">GAIA-IR: GraphScope 上的并行化图查询引擎</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-37570.htm" title="smdms超市订单管理系统之登录功能">smdms超市订单管理系统之登录功能</a></li>
                        <li class="py-2"><a href="/news/article-60384.htm" title="网络地址匹配">网络地址匹配</a></li>
                        <li class="py-2"><a href="/news/article-40524.htm" title="Java基础之浅谈继承、多态">Java基础之浅谈继承、多态</a></li>
                        <li class="py-2"><a href="/news/article-56408.htm" title="宠物粮进货渠道在哪里啊（宠物粮食进货渠道）">宠物粮进货渠道在哪里啊（宠物粮食进货渠道）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-free-clash-subscribe.htm" title="3月1日|最高速度20.5M/S，2025最新ClashVerge免费节点高速订阅链接">3月1日|最高速度20.5M/S，2025最新ClashVerge免费节点高速订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-54199.htm" title="宠物店生意从开业不太好怎么办（宠物店刚开业怎么做活动）">宠物店生意从开业不太好怎么办（宠物店刚开业怎么做活动）</a></li>
                        <li class="py-2"><a href="/news/article-52587.htm" title="幼猫首次驱虫是体内还是体外（幼猫首次驱虫是体内还是体外驱虫）">幼猫首次驱虫是体内还是体外（幼猫首次驱虫是体内还是体外驱虫）</a></li>
                        <li class="py-2"><a href="/news/article-66444.htm" title="JAVA基础小细节——equals()与hashCode()">JAVA基础小细节——equals()与hashCode()</a></li>
                        <li class="py-2"><a href="/news/article-42503.htm" title="猫咪疫苗3针多少钱啊（猫咪的三针疫苗多少钱一只）">猫咪疫苗3针多少钱啊（猫咪的三针疫苗多少钱一只）</a></li>
                        <li class="py-2"><a href="/news/article-57529.htm" title="怎样去除猫身上的跳蚤卵虫（怎么祛除猫身上的跳蚤）">怎样去除猫身上的跳蚤卵虫（怎么祛除猫身上的跳蚤）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>


                </div>
            </div>
        </div>
    </section>
    <!-- ========================= about-section end ========================= -->
        <!-- ========================= footer start ========================= -->
    <footer class="footer">
        <div class="container">
            <div class="copy-right">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                <p>
                    ClashVergeNode节点订阅站 版权所有
                    <br />
                    Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!-- ========================= footer end ========================= -->
    <!-- ========================= JS here ========================= -->
    <script src="/assets/website/js/frontend/clashvergenode/jquery-3.2.1.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/bootstrap-5.0.0-beta2.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/count-up.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/tiny-slider.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/wow.min.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/polifill.js"></script>
    <script src="/assets/website/js/frontend/clashvergenode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>